name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  commitlint:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small

      - uses: cachix/cachix-action@v10
        with:
          name: stupidb
          extraPullNames: nix-community,poetry2nix

      - name: commitlint
        run: nix shell -L -f '<nixpkgs>' commitlint -c commitlint --from=${{ github.event.pull_request.base.sha }} --to=${{ github.sha }} --verbose
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
      - uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - run: nix develop --ignore-environment -L --keep-going -c pre-commit run --all-files
  nix:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        python-version:
          - "39"
          - "310"
        exclude:
          - os: macos-latest
            python-version: "310"
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
      - uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix
      - run: nix build -L --keep-going '.#stupidb${{ matrix.python-version }}'
  doctests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
      - uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix
      - run: nix develop --ignore-environment -L --keep-going -c make -C docs doctest
  docbuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small
      - uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix
      - run: nix develop --ignore-environment -L --keep-going -c make -C docs html
  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        id: install_python
        with:
          python-version: ${{ matrix.python-version }}

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: poetry.lock
          custom_cache_key_element: ${{ steps.install_python.outputs.python-version }}

      - uses: syphar/restore-pip-download-cache@v1
        with:
          requirement_files: poetry.lock
          custom_cache_key_element: ${{ steps.install_python.outputs.python-version }}

      - run: choco install graphviz imagemagick
      - run: pip install poetry
      - run: poetry install --extras animation
      - run: poetry run pytest --numprocesses auto
  dry-run-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small

      - uses: cachix/cachix-action@v10
        with:
          name: stupidb
          extraPullNames: nix-community,poetry2nix

      - name: dry run semantic-release
        run: ./ci/release/dry_run.sh
  release:
    runs-on: ubuntu-latest
    needs:
      - doctests
      - docbuild
      - nix
      - windows
      - pre-commit
      - dry-run-release
    steps:
      - uses: tibdex/github-app-token@v1
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable-small

      - uses: cachix/cachix-action@v10
        with:
          name: stupidb
          extraPullNames: nix-community,poetry2nix

      - name: run semantic-release
        run: ./ci/release/run.sh
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
