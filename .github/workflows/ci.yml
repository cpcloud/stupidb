on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: CI

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install nix
        uses: cachix/install-nix-action@v14

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: lint
        run: nix-shell --pure --run 'pre-commit run --all-files' --keep-going

  nix:
    needs:
      - lint
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install nix
        uses: cachix/install-nix-action@v14

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: build package and run tests
        run: nix build -L --argstr python ${{ matrix.python-version }} --keep-going

  windows:
    needs:
      - lint
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install system dependencies
        run: choco install graphviz imagemagick

      - name: install poetry
        run: pip install poetry

      - name: install package
        run: poetry install --extras animation

      - name: run tests
        run: poetry run pytest --numprocesses auto

  release:
    needs:
      - nix
      - windows
    runs-on: ubuntu-latest
    concurrency: release
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMREL }}

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@v7.19.2
        with:
          github_token: ${{ secrets.SEMREL }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
