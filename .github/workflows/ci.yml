on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: CI

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install nix
        uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: lint
        run: nix develop --print-build-logs --keep-going -c pre-commit run --all-files

  nix:
    strategy:
      matrix:
        os:
          - macos-11
          - macos-10.15
          - ubuntu-latest
        python-version:
          - "37"
          - "38"
          - "39"
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install nix
        uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: build package and run tests
        run: nix build --print-build-logs --keep-going '.#stupidb${{ matrix.python-version }}'

  doctests:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install nix
        uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: run doctests
        run: nix develop --print-build-logs --keep-going -c make -C docs doctest

  docbuild:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install nix
        uses: cachix/install-nix-action@v16
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: setup cachix
        uses: cachix/cachix-action@v10
        with:
          name: stupidb
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: nix-community,poetry2nix

      - name: run doctests
        run: nix develop --print-build-logs --keep-going -c make -C docs html

  windows:
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install system dependencies
        run: choco install graphviz imagemagick

      - name: install poetry
        run: pip install poetry

      - name: install package
        run: poetry install --extras animation

      - name: run tests
        run: poetry run pytest --numprocesses auto

  release:
    needs:
      - doctests
      - docbuild
      - lint
      - nix
      - windows
    runs-on: ubuntu-latest
    concurrency: release
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Generate a GitHub token
        uses: tibdex/github-app-token@v1
        if: ${{ steps.get_current_commit.outputs.rev != steps.get_new_commit.outputs.rev }}
        id: generate_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@v7.23.0
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
